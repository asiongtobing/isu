# su daemon
service su_daemon /system/xbin/su --daemon
    user root
    group root
    disabled
    seclabel u:r:sudaemon:s0

on property:persist.sys.root_access=0
    stop su_daemon

on property:persist.sys.root_access=2
    start su_daemon

on property:persist.sys.root_access=1
    start su_daemon

on property:persist.sys.root_access=3
    start su_daemon

#Above original SU support
# Add the below under any .rc file this to prevent the device from boot without SU and iSu support
# isu daemon
service isu_daemon /system/xbin/isu --daemon
    seclabel u:r:sudaemon:s0

on property:persist.sys.root_access=0
    stop isu_daemon

on property:persist.sys.root_access=2
    start isu_daemon

on property:persist.sys.root_access=1
    start isu_daemon

on property:persist.sys.root_access=3
    start isu_daemon
# isu daemon end

# service example do it on boot to reboot and mv works
# use start and exec just to make shore it will RUN

on boot
    start supolicy
    start isub

service isub  /system/bin/sh /system/bin/isu.sh boot
    class main
    user root
    seclabel u:r:init:s0
    disabled
    oneshot

service supolicy /system/xbin/supolicy --live \
	"allow untrusted_app superuser_device:sock_file { write }" \
	"allow priv_app superuser_device:sock_file { write }" \
	"allow untrusted_app sudaemon:unix_stream_socket { connectto }" \
	"allow priv_app sudaemon:unix_stream_socket { connectto }" \
	"allow untrusted_app anr_data_file:dir { read }" \
	"allow priv_app anr_data_file:dir { read }" \
	"allow priv_app su_exec:file { execute write getattr setattr execute_no_trans }" \
	"allow untrusted_app su_exec:file { execute write getattr setattr execute_no_trans }" \
	"allow untrusted_app system_data_file:file { getattr open read }" \
	"allow priv_app system_data_file:file { getattr open read }"
    class main
    user root
    seclabel u:r:init:s0
    disabled
    oneshot
