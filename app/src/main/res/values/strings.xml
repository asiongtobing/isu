<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools" tools:ignore="MissingTranslation">

    <!-- checks -->
    <string name="safety_net">Safety Net test</string>
    <string name="safetyNet_connection_failed">Cannot connect to Google API</string>
    <string name="safetyNet_connection_suspended">Connection to Google API was suspended</string>
    <string name="safetyNet_error">Cannot check SafetyNet, no Internet?</string>
    <string name="safetyNet_fail">Failed, CTS profile mismatch</string>
    <string name="safetyNet_pass">Passed</string>
    <string name="safetyNet_untested">Untested, Click to test</string>
    <string name="safetyNet_testing">Testing&#8230; If it take too long click again!</string>
    <string name="su_not_cm">Current SU is not supported.\nSome app functions only works with CM-SU</string>
    <string name="reboot_support">Reboot support</string>
    <string name="reboot_support_missing">The reboot support is need to avoid you losing SU after a reboot with SU deactivated. In Android Nougat the app can add that support, in Marshmallow or older is need to flash a file, click on DOWNLOAD FOLDER below to get that files</string>
    <string name="missing">Missing! Click here to understand</string>
    <string name="download_folder">Download Folder</string>
    <string name="checks_log">Generate a .zip with logs that can help to understand fails, bugs, etc&#8230;</string>
    <string name="log">Log</string>
    <string name="generating_log">Generating a Log&#8230;</string>
    <string name="generating_log_move">Log file saved at:\n\n%s</string>
    <string name="cant_generating">Can\'t generate a log, missing write permission to storage</string>

    <!-- controls -->
    <string name="su_switch">Change SU state</string>
    <string name="su_state">SU state</string>
    <string name="device_not_root">Root access not available</string>
    <string name="activated">Activated</string>
    <string name="deactivated">Deactivated</string>
    <string name="su_version">Su version</string>
    <string name="selinux_switch">Change SELinux state</string>
    <string name="anddebug_switch">Android debugging</string>
    <string name="anddebug_change">Change Android debugging state</string>
    <string name="check_settings">Check SETTINGS for extra controls actions base on SU state</string>
    <string name="tasker_summary">iSu controls can be controlled via Tasker\nClick here to see how</string>
    <string name="tasker_help">Use the bellow intents as a \u0022Action\u0022 in a new task (System - Send intent *):\n\n%s \n*Only thing to add or change on the new task is the \u0022Action\u0022 all the other option can be the default of tasker, in doubt check xda support forum link in about</string>
    <string name="tasker_help_extra_description">Descriptions:\n\n</string>
    <string name="tasker_help_extra_state">Set to \u0022%s\u0022 state\n</string>
    <string name="tasker_help_inv">Always inverses the current state\n</string>

    <!-- Settings -->
    <string name="notification_title">SU is deactivated, activate SU?</string>
    <string name="notification_switch">Show a notification when SU is deactivated</string>
    <string name="toast_notification_switch">Show Toast notifications when changing SU</string>
    <string name="yes">Yes</string>
    <string name="dismiss">Dismiss</string>
    <string name="notifications">Notifications</string>
    <string name="activate_anddebug">Activated Android debugging</string>
    <string name="deactivate_anddebug">Deactivated Android debugging</string>
    <string name="not_available">Not Available</string>
    <string name="apply_su">Deactivate SU at boot</string>
    <string name="apply_su_delay">Deactivate SU Delay</string>
    <string name="apply_su_delay_summary">%d seconds</string>
    <string name="application">Application</string>
    <string name="force_english_language">Force language to English</string>

    <!--Monitor-->
    <string name="set_per_app">App monitor</string>
    <string name="service_per_app">iSu App monitor</string>
    <string name="per_app_title_isu">Select the apps that will deactivate SU when started</string>
    <string name="per_app_title_su">Select the apps that will activate SU when started</string>
    <string name="accessibility_service_desc">A Service to monitor when foreground app starts and activate or deactivate SU.</string>
    <string name="activate_selinux">SELinux Set to Enforcing</string>
    <string name="deactivate_selinux">SELinux Set to Permissive</string>
    <string name="per_app_default_deactivate">Deactivate SU to any app if SU is activated</string>
    <string name="per_app_default_activate">Activated SU to any app if SU is deactivated</string>
    <string name="auto_restart_su">Automatic Restart SU</string>
    <string name="auto_restart_su_summary">If on, will automatic active SU when leave the app that deactivated SU</string>
    <string name="per_app_click">Click to</string>
    <string name="per_app_active">Activate SU</string>
    <string name="per_app_deactive">Deactivate SU</string>
    <string name="per_app_dontcare">Don\'t Care List</string>
    <string name="per_app_dontcare_summary">Select the apps that will not have effect to App monitor, when the app start.\nHow this works:\nSelect apps that are nor Root nor UnRoot apps, and are used by or are displayed above a Root or UnRoot app, example Keyboard or function overlay apps</string>
    <string name="monitor_delay">Monitor pause delay</string>
    <string name="monitor_delay_summary">Monitor will pause for chosen time (current %s) when SU is change by widget, tile or controls</string>
    <string name="monitor_warning">App monitor Accessibility service is disabled\nTo use this service is need to enable it in \u0022system settings accessibility\u0022 \nClick here to open it</string>

    <!--Prop-->
    <string name="prop_editor">Props Editor</string>
    <string name="prop_editor_summary">Some apps may block the access base on the value of the below known props</string>
    <string name="unknown">Unknown</string>
    <string name="in_prop_summary">Click on an individual Prop to change it\nProps with * need a reboot after change to take full effect</string>
    <string name="props_ok">Known safe value</string>
    <string name="props_nok">Known unsafe value</string>
    <string name="props_unknown">Unknown value</string>
    <string name="props_unknown_summary">This means that your device doesn\'t have this prop.\nSet this to a safe value may help to pass a safety check</string>
    <string name="safe">Safe value</string>
    <string name="unsafe">Unsafe value</string>
    <string name="force_all">Force set all Known props</string>
    <string name="force_all_summary">Click on the below to force all Known Props to the chosen value:</string>
    <string name="states">Known props list</string>
    <string name="special_props">Special Props</string>
    <string name="special_props_summary">\nIf after the change of a special prop and a reboot the new value is reverted to original ROM value you need request the developer of the ROM to fix it\nClick on the below to change it</string>
    <string name="fingerprint_dialog_title">Choose an option:</string>
    <string name="fingerprint_dialog_summary">Known safe:\nKnown Safe value for this prop for a nexus device\n\nPersonalized:\nEdit current value or Write a new value for this prop (example yours device stock ROM value for this)</string>
    <string name="fingerprint_dialog_know_safe">Known safe</string>
    <string name="fingerprint_dialog_personalized">Personalized</string>
    <string name="fingerprint_dialog_personalized_title">Set new value for\n</string>
    <string name="fingerprint_dialog_result">Be aware to apply the changes is need a reboot!</string>
    <string name="fingerprint_apply">\n\n*The value has changed reboot to apply</string>
    <string name="edited_text">The Personalized value can\'t be empty change not accepted</string>
    <string name="equals_values">No changes made, new value equal current ROM value!</string>
    <string name="props_any">List all ro.props and select some to edit</string>
    <string name="edit">edit</string>
    <string name="props_any_edit_dialog_title">Props to edit</string>
    <string name="props_any_edit_dialog_summary">Forcing a prop to build.prop in most case make it persistent after boot, but is possible that some android tool overwrite the value during boot up that is way iSu will apply changes after boot</string>
    <string name="props_any_edit_dialog_force_bp">Force this prop to build.prop</string>
    <string name="props_any_edit_dialog_already_bp">This prop is already on build.prop</string>
    <string name="edited_text_ro">No changes for prop %s New value was empty</string>
    <string name="edited_text_equals">No changes for prop %s new value is equal old value</string>
    <string name="edited_text_ok">Changes for prop %s apply OK</string>
    <string name="edited_text_result">Result of the changes</string>
    <string name="edited_text_sumary">\nSome props may only have a result after a reboot</string>
    <string name="empty">\n%s</string>
    <string name="ro_props">Read Only editor</string>
    <string name="props_any_list">List yours changes to ro.props</string>
    <string name="props_any_list_dialog_title">List of props that you changed</string>
    <string name="props_any_list_dialog_summary">The below ro.props will be applied on boot if you enable in Setting %s</string>
    <string name="props_no_changes">No changes made!</string>
    <string name="props_any_no_selected">No props selected!</string>
    <string name="know_props">Known Props</string>
    <string name="apply">Apply</string>
    <string name="cancel">Cancel</string>
    <string name="setting_all">Setting all %s to a \n</string>
    <string name="fingerprint_help">\n\nYours current ro.build.fingerprint is the same as yours ro.bootimage.build.fingerprint\nThis on a custom ROM means you are not using an authentic ro.build.fingerprint and that may be a reason for a safety net fail</string>

    <!--Widget-->
    <string name="horizontal">Horizontal</string>
    <string name="vertical">Vertical</string>

    <!--fragmets-->
    <string name="checks">Checks</string>
    <string name="controls">Controls</string>
    <string name="monitor">Monitor</string>
    <string name="props">Props</string>
    <string name="settings">Settings</string>

    <!--extras-->
    <string name="selinux">SELinux</string>
    <string name="selinux_settings">Extra SELinux controls</string>
    <string name="selinux_settings_summary">Control the state of SELinux when SU is changed</string>
    <string name="selinux_su_on">SELinux state when SU is Activated</string>
    <string name="selinux_su_off">SELinux state SU Deactivated</string>
    <string name="enforcing">Enforcing</string>
    <string name="permissive">Permissive</string>
    <string name="anddebug_settings">Extra Android Debug controls</string>
    <string name="anddebug_settings_summary">Control the state of Android Debug when SU is changed</string>
    <string name="anddebug_su_on">Android Debug state when SU is Activated</string>
    <string name="anddebug_su_off">Android Debug state when SU is Deactivated</string>
    <string name="enable">Enabled</string>
    <string name="disable">Disabled</string>
    <string name="props_apply_boot">Apply changes to props on boot</string>
    <string name="su_not_supported">SU version not supported</string>
    <string name="su_access">SU Access</string>
    <string name="language">Default language</string>
    <string name="reloading">%s has changed reloading the application!</string>

    <!-- about -->
    <string name="about">About</string>
    <string name="dev_info">Developer information:</string>
    <string name="git_summary">This is an open source application check it on my github\ngithub.com/bhb27/isu</string>
    <string name="version">Version:</string>
    <string name="version_summary">A simple app to deactivate SU at will and pass safety verification for some apps, today it works only on SU binary of CM/LOS base ROM\'s.</string>
    <string name="xda_summary">XDA support forum site</string>
    <string name="no_email_client">There is none email client installed on the device.</string>
    <string name="no_browser">There is none web browser installed on the device.</string>

    <!--  Maybe common to all languages -->
    <string name="ok">OK</string>
    <string name="email">Email</string>
    <!--  translatable false  or common to all languages -->
    <string name="tasker" translatable="false" >Tasker</string>
    <string name="github" translatable="false" >GitHub</string>
    <string name="email_summary" translatable="false" >fglfgl27@gmail.com</string>
    <!--  props -->
    <string name="robuildtags" translatable="false" >ro.build.tags *</string>
    <string name="rodebuggable" translatable="false" >ro.debuggable</string>
    <string name="robootbl_state" translatable="false" >ro.boot.bl_state</string>
    <string name="robootflashlocked" translatable="false" >ro.boot.flash.locked</string>
    <string name="robootverifiedbootstate" translatable="false" >ro.boot.verifiedbootstate</string>
    <string name="rosecure" translatable="false" >ro.secure</string>
    <string name="robootveritymode" translatable="false" >ro.boot.veritymode</string>
    <string name="robuildtype" translatable="false" >ro.build.type</string>
    <string name="robuildselinux" translatable="false" >ro.build.selinux</string>
    <string name="robootselinux" translatable="false" >ro.boot.selinux</string>
    <string name="robuildfingerprint" translatable="false" >ro.build.fingerprint</string>

    <!--About images-->
    <string name="github_icon" translatable="false" >Git hub icon</string>
    <string name="xda_icon" translatable="false" >XDA icon</string>
    <string name="gmail_icon" translatable="false" >Gmail icon</string>
    <!--Main image-->
    <string name="isu_icon" translatable="false" >iSu icon</string>
    <string name="app_name" translatable="false" >iSu</string>
</resources>