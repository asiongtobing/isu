<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools" tools:ignore="MissingTranslation">

    <!-- checks -->
    <string name="safety_net">Safety Net test</string>
    <string name="safetyNet_no_response">Cannot check SafetyNet, no Internet?</string>
    <string name="safetyNet_check_success">Test successful, Result:</string>
    <string name="safetyNet_fail">Failed</string>
    <string name="safetyNet_pass">Passed</string>
    <string name="safetyNet_network_loss">Network connection loss</string>
    <string name="safetyNet_service_disconnected">Service has been killed</string>
    <string name="safetyNet_res_invalid">The response is invalid</string>
    <string name="safetyNet_untested">Untested, Click to test</string>
    <string name="safetyNet_testing">Testing&#8230; It may take a few seconds.</string>
    <string name="fail_reason">(reason of the fail)</string>
    <string name="props_status_good">OK for Safety Net</string>
    <string name="su_not_cm">Current SU is not supported.\nSome app functions only works with CM-SU</string>
    <string name="reboot_support">Reboot support</string>
    <string name="reboot_support_missing">The reboot support is need to avoid you losing SU after a reboot with SU deactivated. In Android Nougat the app can add that support, in Marshmallow or older is need to flash a file, click on DOWNLOAD FOLDER below to get that files</string>
    <string name="missing">Missing! Click here to understand</string>
    <string name="download_folder">Download Folder</string>
    <string name="checks_log">Generate a .zip with all logs that can help to understand fails, bugs, etc&#8230;</string>
    <string name="log">Log</string>
    <string name="generating_log">Generating a Log&#8230;</string>
    <string name="generating_log_move">Log file saved at:\n\n%s</string>
    <string name="cant_generating">Can\'t generate a log, missing write permission to storage</string>
    <string name="update">Update</string>
    <string name="update_title">Update Status</string>
    <string name="update_summary_out">iSu is Outdated\nLatest app version is %s, but you are running version</string>
    <string name="update_summary_up">iSu is up-to-date</string>
    <string name="update_summary_fail">Could not verify, click to try again</string>
    <string name="update_link">\n\nClick here to open iSu download page</string>
    <string name="update_checking">Checking&#8230; It may take a few seconds.</string>
    <string name="generate_log">Generate a log</string>
    <string name="help">Help</string>
    <string name="hide">Hide</string>
    <string name="hide_title">Hide iSu</string>
    <string name="hide_generating">Installing fake iSu (%d&#176; try), this will take a moment&#8230;</string>
    <string name="hide_summary">Some applications can identify that iSu is installed and prevent use or access of they content, this function can prevent others applications from see iSu, by creating a fake version of the app that is harder to be detected</string>
    <string name="hide_isu">\n\nHide iSu?</string>
    <string name="fake">Fake</string>
    <string name="hide_fail">Hide process fail tree times, contact the developer with logs</string>
    <string name="hide_success">Hide process end with success, new iSu package id %s</string>
    <string name="is_hide">iSu is in \u0022HideMod\u0022, if you choose to revert this state click here</string>
    <string name="unhide_title">Unhide iSu</string>
    <string name="unhide_summary">UnHide iSu? and uninstall This fake version?</string>
    <string name="not_hide">Running as Fake iSu but original iSu is not hidden, click here to fix it</string>
    <string name="hiding_isu">Hiding original iSu&#8230;</string>

    <!-- controls -->
    <string name="su_switch">Change SU state</string>
    <string name="su_state">SU state</string>
    <string name="selinux_state">SELinux state</string>
    <string name="adb_state">Android debugging state</string>
    <string name="device_not_root">Root access not available</string>
    <string name="activated">Activated</string>
    <string name="deactivated">Deactivated</string>
    <string name="su_version">Su version</string>
    <string name="selinux_switch">Change SELinux state</string>
    <string name="fake_selinux_switch">Fake Enforce SELinux</string>
    <string name="fake_selinux_switch_summary">For devices that have problem with SELinux enforced (boot up in permissive), enable this to fake enforce SELinux, this can only be reverted by disabling this option and rebooting</string>
    <string name="anddebug_switch">Android debugging</string>
    <string name="anddebug_change">Change Android debugging state</string>
    <string name="check_settings">Check SETTINGS for extra controls actions base on SU state</string>
    <string name="tasker_summary">iSu controls can be controlled via Tasker\nClick here to see how</string>
    <string name="tasker_help">Use the bellow intents as a \u0022Action\u0022 in a new task (System - Send intent *):\n\n%s \n*Only thing to add or change on the new task is the \u0022Action\u0022 all the other option can be the default of tasker, in doubt check xda support forum link in about</string>
    <string name="tasker_help_extra_description">Descriptions:\n\n</string>
    <string name="tasker_help_extra_state">Set to \u0022%s\u0022 state\n</string>
    <string name="tasker_help_inv">Always inverses the current state\n</string>

    <!-- Settings -->
    <string name="notification_title">SU is deactivated, activate SU?</string>
    <string name="notification_switch">Show a notification when SU is deactivated</string>
    <string name="toast_notification_switch">Show Toast notifications when changing SU</string>
    <string name="yes">Yes</string>
    <string name="dismiss">Dismiss</string>
    <string name="notifications">Notifications</string>
    <string name="activate_anddebug">Activated Android debugging</string>
    <string name="deactivate_anddebug">Deactivated Android debugging</string>
    <string name="not_available">Not Available</string>
    <string name="apply_su">Deactivate SU at boot</string>
    <string name="apply_su_delay">Deactivate SU Delay</string>
    <string name="apply_su_delay_summary">%d seconds</string>
    <string name="application">Application</string>
    <string name="force_english_language">Force language to English</string>

    <!--Monitor-->
    <string name="set_per_app">App monitor</string>
    <string name="service_per_app">iSu App monitor</string>
    <string name="per_app_title_isu">Select the apps that will deactivate SU when started</string>
    <string name="per_app_title_su">Select the apps that will activate SU when started</string>
    <string name="accessibility_service_desc">A Service to monitor when a foreground app starts then, activate or deactivate SU.\nBe aware some apps may be too fast and the service ativate or deactivate SU too late, on this case is recommended to use a manual change, via the app it widget or tile.</string>
    <string name="activate_selinux">SELinux Set to Enforcing</string>
    <string name="deactivate_selinux">SELinux Set to Permissive</string>
    <string name="per_app_default_deactivate">Deactivate SU to any app if SU is activated</string>
    <string name="per_app_default_activate">Activated SU to any app if SU is deactivated</string>
    <string name="auto_restart_su">Automatic Re-Activate SU</string>
    <string name="auto_restart_su_summary">If this switch is on, will automatic active SU when leave the app that deactivated SU</string>
    <string name="auto_restart_isu">Automatic Re-Deactivate SU</string>
    <string name="auto_restart_isu_summary">If this switch is on, will automatic deactivate SU when leave the app that activated SU</string>
    <string name="auto_restart_vice_versa">Automatic activate and deactivate can\'t be enable at the same time</string>
    <string name="deactivate_list">Deactivate list</string>
    <string name="activate_list">Activate list</string>
    <string name="dontcare_list">Don\'t Care list</string>
    <string name="per_app_active">Activate SU</string>
    <string name="per_app_deactive">Deactivate SU</string>
    <string name="per_app_dontcare">Don\'t Care List</string>
    <string name="per_app_dontcare_summary">Select the apps that will have no effect to App monitor, when it start.\nHow this works:\nSelect apps that are nor Root nor UnRoot apps, and are used by or are displayed above a Root or UnRoot app, example Keyboard or function overlay apps like volume apps</string>
    <string name="monitor_delay">Monitor delay</string>
    <string name="monitor_delay_summary">App monitor will delay by the chosen time (current %s) when SU is change by widget, tile or controls</string>
    <string name="monitor_warning">App monitor accessibility service is disabled\nTo use this service is need to enable it in \u0022system settings accessibility\u0022 \nClick here to open accessibility</string>
    <string name="monitor_ok">App monitor accessibility service is enable in \u0022system settings accessibility\u0022 \nClick here to open accessibility</string>

    <!--Prop-->
    <string name="unknown">Unknown</string>
    <string name="in_prop_summary">Click on the below to change a individual prop, Props with * need a reboot after change to take full effect, Props with (sn) are known to cause safety net fail</string>
    <string name="props_ok">Known safe value</string>
    <string name="props_nok">Known unsafe value</string>
    <string name="props_unknown">Unknown value</string>
    <string name="props_unknown_summary">Props with unknown are props that yours device doesn\'t have, this doesn\'t means a problem</string>
    <string name="safe">Safe value</string>
    <string name="unsafe">Unsafe value</string>
    <string name="unsafe_toast">Not recommended, if you really need to change, do it individually</string>
    <string name="force_all_summary">Click on the below to force all Known Props to the chosen value:</string>
    <string name="know_prop_list">Known props list</string>
    <string name="special_props">Special Props</string>
    <string name="special_props_summary">\nIf after a change of a special prop and one reboot the new value is reverted to original ROM value you need request the developer of the ROM to fix it</string>
    <string name="fingerprint_dialog_title">Choose an option:</string>
    <string name="fingerprint_dialog_summary">Known safe:\nKnown Safe value for this prop for a nexus device\n\nPersonalized:\nEdit current value or Write a new value for this prop (example yours device stock ROM value for this)</string>
    <string name="fingerprint_dialog_know_safe">Known safe</string>
    <string name="fingerprint_dialog_personalized">Personalized</string>
    <string name="fingerprint_dialog_personalized_title">Set new value for\n</string>
    <string name="fingerprint_dialog_result">Be aware to apply the changes is need one reboot!</string>
    <string name="fingerprint_apply">\n\n*The value has changed reboot to apply</string>
    <string name="edited_text">The Personalized value can\'t be empty change not accepted</string>
    <string name="equals_values">No changes made, new value equal current ROM value!</string>

    <string name="edit">Edit</string>
    <string name="props_any_edit_dialog_title">Props to edit</string>
    <string name="props_any_edit_dialog_summary">Forcing a prop to build.prop in most case make it persistent after boot, but is possible that some android tool overwrite the value during boot up that is way iSu will apply changes after boot</string>
    <string name="props_any_edit_dialog_force_bp">Force this prop to build.prop</string>
    <string name="props_any_edit_dialog_already_bp">This prop is already on build.prop</string>
    <string name="edited_text_ro">No changes for prop %s New value was empty</string>
    <string name="edited_text_equals">No changes for prop %s new value is equal old value</string>
    <string name="edited_text_ok">Changes for prop %s apply OK</string>
    <string name="edited_text_result">Result of the changes</string>
    <string name="edited_text_sumary">\nSome props may only have a result after a reboot</string>
    <string name="empty">\n%s</string>
    <string name="ro_props">Read Only editor</string>
    <string name="props_any_summary">List all ro.props and select some to edit</string>
    <string name="props_any_list">List</string>
    <string name="props_any_list_summary">List yours changes to ro.props</string>
    <string name="props_any_list_dialog_title">List of props that you changed</string>
    <string name="props_any_list_dialog_summary">The below ro.props will be applied on boot if you enable in Setting %s</string>
    <string name="props_no_changes">No changes made!</string>
    <string name="props_any_no_selected">No props selected!</string>
    <string name="know_props">Known Props</string>
    <string name="apply">Apply</string>
    <string name="cancel">Cancel</string>
    <string name="setting_all">Setting all %s to a \n</string>
    <string name="fingerprint_help">\n\nYours current ro.build.fingerprint has the same value as yours ro.bootimage.build.fingerprint\nThis on a custom ROM means you are not using an authentic ro.build.fingerprint and that is a known reason for a safety net fail</string>

    <!--Widget-->
    <string name="horizontal">Horizontal</string>
    <string name="vertical">Vertical</string>

    <!--fragmets-->
    <string name="checks">Checks</string>
    <string name="controls">Controls</string>
    <string name="monitor">Monitor</string>
    <string name="props">Props</string>
    <string name="settings">Settings</string>

    <!--extras-->
    <string name="selinux">SELinux</string>
    <string name="selinux_settings">Extra SELinux controls</string>
    <string name="selinux_settings_summary">Control the state of SELinux when SU is changed</string>
    <string name="selinux_su_on">SELinux state when SU is Activated</string>
    <string name="selinux_su_off">SELinux state SU Deactivated</string>
    <string name="enforcing">Enforcing</string>
    <string name="permissive">Permissive</string>
    <string name="anddebug_settings">Extra Android Debug controls</string>
    <string name="anddebug_settings_summary">Control the state of Android Debug when SU is changed</string>
    <string name="anddebug_su_on">Android Debug state when SU is Activated</string>
    <string name="anddebug_su_off">Android Debug state when SU is Deactivated</string>
    <string name="enable">Enabled</string>
    <string name="disable">Disabled</string>
    <string name="props_apply_boot">Apply changes to props on boot</string>
    <string name="su_not_supported">SU version not supported</string>
    <string name="su_access">SU Access</string>
    <string name="language">Default language</string>
    <string name="reloading">%s has changed reloading the application!</string>

    <!-- about -->
    <string name="about">About</string>
    <string name="dev_info">Developer information:</string>
    <string name="git_summary">This is an open source application check it on my github\ngithub.com/bhb27/isu</string>
    <string name="version">Version:</string>
    <string name="version_summary">A simple app to help rooted devices to pass safety verification</string>
    <string name="xda_summary">XDA support forum</string>
    <string name="xda_summary_summary">In case of help or how to click and go to support forum</string>
    <string name="no_email_client">There is none email client installed on the device.</string>
    <string name="no_browser">There is none web browser installed on the device.</string>
    <string name="app_license">iSu is licensed under the GNU General Public License v3.0, and uses following dependencies:</string>
    <string name="appcompat_v7" translatable="false">Appcompat v7 Library (by google)</string>
    <string name="support_v4" translatable="false">Support v4 Library (by google)</string>
    <string name="support_v13" translatable="false">Support v13 Library (by google)</string>
    <string name="preference_v14" translatable="false">Preference v14 Library (by google)</string>
    <string name="design" translatable="false">Design Library (by google)</string>
    <string name="play_safetynet" translatable="false">Play Services Safetynet Library (by google)</string>
    <string name="ztzip" translatable="false">ZeroTurnaround ZIP Library (by zeroturnaround)</string>
    <string name="okhttp" translatable="false">okhttp Library, HTTP+HTTP/2 client for Android and Java applications (by Square)</string>
    <string name="material_dialogs" translatable="false">Material Dialogs Library, a beautiful, fluid, and customizable dialogs API (by Aidan Follestad)</string>
    <string name="resetprop" translatable="false">Resetprop Binary, to Manipulate any system props (by John Wu aka topjohnwu)</string>
    <string name="busybox" translatable="false">Busybox Binary, the Swiss Army Knife of Embedded Linux (by Denys Vlasenko, build by Chris Renshaw aka osm0sis)</string>
    <string name="magiskpolicy" translatable="false">MagiskPolicy Binary, sepolicy injection utility (by John Wu aka topjohnwu)</string>

    <!--  Maybe common to all languages -->
    <string name="ok">OK</string>
    <string name="email">Email</string>
    <!--  translatable false  or common to all languages -->
    <string name="tasker" translatable="false" >Tasker</string>
    <string name="github" translatable="false" >GitHub</string>
    <string name="email_summary" translatable="false" >fglfgl27@gmail.com</string>
    <!--  props -->
    <string name="robuildtags" translatable="false" >ro.build.tags *</string>
    <string name="rodebuggable" translatable="false" >ro.debuggable</string>
    <string name="robootbl_state" translatable="false" >ro.boot.bl_state</string>
    <string name="robootflashlocked" translatable="false" >ro.boot.flash.locked (sn)</string>
    <string name="robootverifiedbootstate" translatable="false" >ro.boot.verifiedbootstate (sn)</string>
    <string name="rosecure" translatable="false" >ro.secure (sn)</string>
    <string name="robootveritymode" translatable="false" >ro.boot.veritymode</string>
    <string name="robuildtype" translatable="false" >ro.build.type</string>
    <string name="robuildselinux" translatable="false" >ro.build.selinux</string>
    <string name="robootselinux" translatable="false" >ro.boot.selinux</string>
    <string name="robuildfingerprint" translatable="false" >ro.build.fingerprint</string>
    <string name="robootwarranty_bit" translatable="false" >ro.boot.warranty_bit</string>

    <!--About images-->
    <string name="github_icon" translatable="false" >Git hub icon</string>
    <string name="xda_icon" translatable="false" >XDA icon</string>
    <string name="gmail_icon" translatable="false" >Gmail icon</string>
    <!--Main image-->
    <string name="isu_icon" translatable="false" >iSu icon</string>
    <string name="app_name" translatable="false" >iSu</string>
</resources>
